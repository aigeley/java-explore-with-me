{
  "info": {
    "_postman_id": "333972f7-451e-4386-8b3f-b04f611702b0",
    "name": "feature",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "21763740"
  },
  "item": [
    {
      "name": "Add participant",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add user\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('participantId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"participant\",\n    \"email\": \"participant{{$timestamp}}@ya.ru\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add good author",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add user\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('goodAuthorId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"good author\",\n    \"email\": \"good_author{{$timestamp}}@ya.ru\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add bad author",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add user\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('badAuthorId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"bad author\",\n    \"email\": \"bad_author{{$timestamp}}@ya.ru\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add category",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add category\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('categoryId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"category{{$timestamp}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add past good event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('pastGoodEventId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"annotation\": \"past good annotation\",\n  \"category\": {{categoryId}},\n  \"description\": \"past good description\",\n  \"eventDate\": \"{{futureDate}}\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"paid\": false,\n  \"participantLimit\": 0,\n  \"requestModeration\": false,\n  \"title\": \"past good title{{$timestamp}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{goodAuthorId}}/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{goodAuthorId}}",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add past bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('pastBadEventId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"annotation\": \"past bad annotation!\",\n  \"category\": {{categoryId}},\n  \"description\": \"past bad description\",\n  \"eventDate\": \"{{futureDate}}\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"paid\": true,\n  \"participantLimit\": 10,\n  \"requestModeration\": false,\n  \"title\": \"past bad title{{$timestamp}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{badAuthorId}}/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{badAuthorId}}",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add future good event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('futureGoodEventId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"annotation\": \"future good annotation\",\n  \"category\": {{categoryId}},\n  \"description\": \"future good description\",\n  \"eventDate\": \"{{futureDate}}\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"paid\": false,\n  \"participantLimit\": 0,\n  \"requestModeration\": false,\n  \"title\": \"future good title{{$timestamp}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{goodAuthorId}}/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{goodAuthorId}}",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add future bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('futureBadEventId', jsonData.id)",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"annotation\": \"future bad annotation\",\n  \"category\": {{categoryId}},\n  \"description\": \"future bad description\",\n  \"eventDate\": \"{{futureDate}}\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"paid\": true,\n  \"participantLimit\": 10,\n  \"requestModeration\": false,\n  \"title\": \"future bad title{{$timestamp}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{badAuthorId}}/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{badAuthorId}}",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Publish past good  event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test publish event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('pastGoodEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{pastGoodEventId}}/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{pastGoodEventId}}",
            "publish"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Publish past bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test publish event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('pastBadEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{pastBadEventId}}/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{pastBadEventId}}",
            "publish"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Publish future good event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test publish event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('futureGoodEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{futureGoodEventId}}/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{futureGoodEventId}}",
            "publish"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Publish future bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test publish event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('futureBadEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{futureBadEventId}}/publish",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{futureBadEventId}}",
            "publish"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update past good event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test update event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('pastGoodEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"eventDate\": \"{{pastDate}}\"\r\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{pastGoodEventId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{pastGoodEventId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update past bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test update event\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id, '\"id\" field').to.eql(pm.collectionVariables.get('pastBadEventId'));",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"eventDate\": \"{{pastDate}}\"\r\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/{{pastBadEventId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "{{pastBadEventId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add request to past good  event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add request\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status, '\"status\" field').to.eql('CONFIRMED');",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{participantId}}/requests?eventId={{pastGoodEventId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{participantId}}",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "{{pastGoodEventId}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add request to past bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add request\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status, '\"status\" field').to.eql('CONFIRMED');",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{participantId}}/requests?eventId={{pastBadEventId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{participantId}}",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "{{pastBadEventId}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add like to past good event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add like\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('created');",
              "    pm.expect(jsonData.eventId, '\"eventId\" field').to.eql(pm.collectionVariables.get('pastGoodEventId'));",
              "    pm.expect(jsonData.userId, '\"userId\" field').to.eql(pm.collectionVariables.get('participantId'));",
              "    pm.expect(jsonData.markValue, '\"markValue\" field').to.eql(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{participantId}}/marks?eventId={{pastGoodEventId}}&markValue=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{participantId}}",
            "marks"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "{{pastGoodEventId}}"
            },
            {
              "key": "markValue",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add dislike to past bad event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test add dislike\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('created');",
              "    pm.expect(jsonData.eventId, '\"eventId\" field').to.eql(pm.collectionVariables.get('pastBadEventId'));",
              "    pm.expect(jsonData.userId, '\"userId\" field').to.eql(pm.collectionVariables.get('participantId'));",
              "    pm.expect(jsonData.markValue, '\"markValue\" field').to.eql(0);",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{participantId}}/marks?eventId={{pastBadEventId}}&markValue=0",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{participantId}}",
            "marks"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "{{pastBadEventId}}"
            },
            {
              "key": "markValue",
              "value": "0"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get events sorted by likes",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test get events\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    pm.expect(jsonData[0].id, '\"id\" field').to.eql(pm.collectionVariables.get('pastGoodEventId'));",
              "    pm.expect(jsonData[0].likes, '\"likes\" field').to.eql(1);",
              "    pm.expect(jsonData[0].dislikes, '\"dislikes\" field').to.eql(0);",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/events?categories={{categoryId}}&rangeStart={{pastSearchDate}}&onlyAvailable=false&sort=LIKES&from=0&size=10",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "events"
          ],
          "query": [
            {
              "key": "categories",
              "value": "{{categoryId}}"
            },
            {
              "key": "rangeStart",
              "value": "{{pastSearchDate}}"
            },
            {
              "key": "onlyAvailable",
              "value": "false"
            },
            {
              "key": "sort",
              "value": "LIKES"
            },
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get recommendations",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200]);",
              "});",
              "pm.test(\"Test get recommendations\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    pm.expect(jsonData[0].id, '\"id\" field').to.eql(pm.collectionVariables.get('futureGoodEventId'));",
              "    pm.expect(jsonData[0].likes, '\"likes\" field').to.eql(0);",
              "    pm.expect(jsonData[0].dislikes, '\"dislikes\" field').to.eql(0);",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "*/*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{participantId}}/recommendations",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "{{participantId}}",
            "recommendations"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "function getShiftedDateTime(hourShift, minuteShift, yearShift) {",
          "        let moment = require('moment');",
          "",
          "        let m = moment();",
          "        m.add(hourShift, 'hour');",
          "        m.add(minuteShift, 'minute');",
          "        m.add(yearShift, 'year');",
          "",
          "        return m.format('YYYY-MM-DD HH:mm:ss');",
          "    }",
          "",
          "pm.collectionVariables.set('futureDate', getShiftedDateTime(5, 0, 0));",
          "pm.collectionVariables.set('pastDate', getShiftedDateTime(-5, 0, 0));",
          "pm.collectionVariables.set('pastSearchDate', getShiftedDateTime(-6, 0, 0));",
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "participantId",
      "value": "",
      "type": "string"
    },
    {
      "key": "goodAuthorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "badAuthorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "pastGoodEventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "pastBadEventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "futureGoodEventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "futureBadEventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "futureDate",
      "value": "",
      "type": "string"
    },
    {
      "key": "pastDate",
      "value": "",
      "type": "string"
    },
    {
      "key": "pastSearchDate",
      "value": "",
      "type": "string"
    }
  ]
}